# http://www.kernel.org/pub/software/scm/git/docs/git-config.html

[user]
    name = Jens-Andr√© Koch
    email = jakoch@web.de

[github]
    user = jakoch
    token = @token@

[alias]
    br = branch
    c  = commit
    ca = commit --amend
    co = checkout
    d  = diff
    s  = status

    drop = stash drop
    list = stash list

    # Pull in remote changes for the current repository and all its submodules
    p = !"git pull; git submodule foreach git pull origin master"
    
    # Fetches a Pull Request by number into own branch named "pr-$NUMBER"
    pr = "!f() { git fetch origin pull/$1/head:pr-$1 && git checkout pr-$1; }; f"

    # Commit all changes
    ca = !git add -A && git commit -av

    # rebase interactive
    rbi = rebase -i

    cp = cherry-pick
    cps = cherry-pick -s

    # Undo `git push`
    undopush = push -f origin HEAD^:master

    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v

    # enhanced log view
    lg = git log --graph --pretty="format:%C(yellow)%h%Cblue%d%Creset %s %C(white) %an, %ar%Creset"

    # show users which have commits in current branch
    userlist = "!git log --format='%aN' | sort -u"
    # same as userlist, but with commit count
    usercount = "!git log --format='%aN <%aE>' | awk '{arr[$0]++} END{for (i in arr){print arr[i], i;}}' | sort -nr"

    w = whatchanged --pretty=short

    # When used after a pull, shows all new commits from old to new.
    # Optionally takes the branch name.
    whatsnew = !git hist --no-merges --reverse $1@{1}..$1@{0}

# always set `origin` as the default remote on the `master` branch
[branch "master"]
    remote = origin
    merge = refs/heads/master
    rebase = true

[branch]
  autosetupmerge = true

[push]
    default = tracking

[format]
    pretty = %Cblue%h%Creset %Cgreen[%ar]%Creset (%an) %s

# anti whitespace / anti tab
[core]
    # enforce "trailing-spaces" and "mixing spaces with tabs" as errors
    # To get rid of trailing whitespace on all files in the current directory, use: sed -i 's/[[:space:]]*$//' *
    whitespace =  trailing-space,space-before-tab,cr-at-eol,tab-in-indent

[apply]
    # when applying a patch, strip whitespaces out
    whitespace = fix

# git flow configuration - https://github.com/nvie/gitflow

[gitflow "branch"]
    master = master
    develop = develop

[gitflow "prefix"]
    feature = feature/
    release = release/
    hotfix = hotfix/
    support = support/
    versiontag = v

# URL replacements

[url "git@gist.github.com:"]
    pushInsteadOf = git://gist.github.com/
    pushInsteadOf = https://gist.github.com/

[url "git@github.com:"]
    pushInsteadOf = git://github.com/
    pushInsteadOf = https://github.com/

[transfer]
  # Verify new objects to catch errors early.
  # This is to prevent bad objects from spreading further.
  fsckObjects = true

[diff]
  # Try harder to produce a clean diff.
  # The "histogram" algorithm is an extension of the "patience" algorithm.
  # It is faster than "patience" and the default "diff" algorithm.
  algorithm = histogram

  # Try to break up diffs at blank lines, so that brackets don't float away.
  compactionHeuristic = true

[merge]
  # Show the common ancestor for merge conflicts.
  conflictstyle = diff3

[rebase]
  # When doing an interactive rebase, automatically reorder and set the right
  # actions for commits that were committed with --fixup or --squash.
  autosquash = true

[rerere]
  # Remember conflict resolutions.
  # If the same conflict appears again, use the previous resolution.
  enabled = true

  # If rerere successfully resolved a conflict, stage the conflicted file automatically.
  autoupdate = true

#
# GUI style related settings
#

[gui]
  fontdiff = -family Consolas -size 10 -weight normal -slant roman -underline 0 -overstrike 0
  diffcontext = 4
  encoding = utf-8

[color]
    diff = auto
    branch = auto
    status = auto
    interactive = auto
    ui = auto
    pager = true

[color "branch"]
    current = red
    remote = green

[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "status"]
    added = yellow
    changed = green
    untracked = red